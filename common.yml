services:
  network-service:
    restart: always
    networks:
      - dbank

  kafka-service:
    extends:
      service: network-service
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  postgres-service:
    extends:
      service: network-service
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  eureka-service:
    extends:
      service: network-service
    environment:
      EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE: http://eureka-server:8000/eureka/

  spring-service:
    extends:
      service: eureka-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DOCKER_COMPOSE_ENABLED: false
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}

  spring-kafka-config-service:
    extends:
      service: spring-service
    environment:
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka1:19092,kafka2:19093,kafka3:19094